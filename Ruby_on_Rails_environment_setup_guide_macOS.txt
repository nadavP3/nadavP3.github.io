Instructions for installing Ruby on Rails Web development environment on macOS.

Don’t rush, read everything s-l-o-w-l-y, and don’t view this as a hassle, view this as your Mac-IT/DevOps first lesson.


1. Follow https://railsapps.github.io/installrubyonrails-mac.html top to bottom, when given the choice opt for:
RVM instead of RBENV
iTerm2 instead of native terminal or fish
Rails 5 instead of 4.x or any other version
Sublime Text 2 instead of Sublime Text 3 or Atom.

2. You will also need to follow http://wikimatze.de/installing-postgresql-gem-under-ubuntu-and-mac

3. If you get errors installing the PG gem(for example, during “bundle install”), make sure you set the PATH as explained AND that you have an elephant running, confused? Check this:
https://www.postgresql.org/download/macosx/
Choose Postgres.app instead of EnterpriseDB or BigSQL or anything else.
The app needs to place in Applications folder (as in, ~/Macintosh HD/Applications), and to be running in order to have your website functioning, otherwise after shotgun (and while shotgun is running) you will see spilled drinks error of no connections to database.

4. If after everything you are still stuck on installing PG gem, look into (‘the entire page’) this: https://stackoverflow.com/questions/30162572/error-message-make-sure-that-gem-install-pg-v-0-18-1-succeeds-before-bundl
In particular, brew installing, OS X Dev tools and postgresql … but only after you gave all of the above a very healthy amount of time.

5. For sublime, you might also want to get Package Control from:
https://packagecontrol.io/installation#st2
and use (command+shift+p) to install terminal, as explained here:
https://www.granneman.com/webdev/editors/sublime-text/packages/how-to-install-and-use-package-control/
and here:
https://packagecontrol.io/packages/Terminal 

6. you might also want to type:
curl -L https://iterm2.com/misc/install_shell_integration.sh | bash
in your iTerm2 session.

7. As well as:
ln -s /Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
This one will make typing “subl” in terminal, or “subl .” work.

8. Tips\workflow: 
While inside a project folder via iterm2, you would most likely need to delete the gemfile.lock, then type:
bundle install (or bundle update, sometimes)
bundle exec rake db:create
bundle exec rake db:migrate
bundle exec rake db:seed
shotgun
and don’t forget to start postgress app

It’s highly recommended that you try the above on:
/blog-2-multi-author-challenge/
•	You might also need, on some other assignments, to generate your migrations… but that’s beyond the scope of this guide.

9. Did you know that you can type “ls –a” to view hidden files? If you do this at the root folder of your computer’s user (so on DBC’s computers, if you do this inside terminal while at ~/apprentice/) you will able to see (and later open via “subl [file_name]”) cool stuff like…. That elusive .bash_profile, in case you want to borrow some of the settings used onsite (if you already have a bash_profile file, you might want to back it up before you do any changes… just in case you won’t like the outcome).

source:
http://nadavp3.github.io/Ruby_on_Rails_environment_setup_guide_macOS.txt
